worker_processes  1;

error_log  logs/error.log;
pid        logs/nginx.pid;


events {
    worker_connections  1024;
}



http {
    #lua_code_cache off;

    #default_type  application/octet-stream;

    access_log  logs/access.log;

    sendfile        on;

    keepalive_timeout  65;

    init_by_lua_block {
        local init = require 'lib.init'
    }

    server {
        listen       8090;
        server_name  localhost;

        location / {
            content_by_lua_block {
                ngx.req.read_body()
                local args, err = ngx.req.get_post_args()
                if not args then
                    ngx.say("failed to get post args: ", err)
                    return
                end
                for key, val in pairs(args) do
                    if type(val) == "table" then
                        ngx.say(key, ": ", table.concat(val, ", "))
                    else
                        ngx.say(ngx.unescape_uri(key), ": ", ngx.unescape_uri(val))
                    end
                end
            }
        }

        location /testpapers {
            client_max_body_size 50k;
            client_body_buffer_size 50k;
            content_by_lua_block {
                local tp = require 'lib.testpapers'
                local method = tp[ngx.req.get_method()]
                if method then
                    method()
                else
                    ngx.exit(500)
                end
            }
        }

        location ~ /testpapers/([0-9]+)/([0-9]+)/([0-9]+) {
            content_by_lua_block {
                local ptypestr = ngx.var[1]
                local ptype = tonumber(ptypestr)
                local count = tonumber(ngx.var[2])
                local randomseed = tonumber(ngx.var[3])
                local tp = require 'lib.testpapers'
                local paper = tp.makep(ptype, count, randomseed)
                if paper then
                    local json = require 'cjson'
                    ngx.say(json.encode{[ptypestr]=paper})
                    -- for test
                    for i,v in ipairs(paper) do
                        ngx.say(string.format('%08X', v) .. ' ' .. i)
                    end
                    -- for test
                else
                    ngx.exit(500)
                end
            }
        }

        location ~ /testpapers/([0-9]+) {
            content_by_lua_block {
                ngx.say(ngx.var[1])
                local tp = require 'lib.testpapers'
                local method = tp.single[ngx.req.get_method()]
                if method then
                    method()
                else
                    ngx.exit(500)
                end
            }
        }


        location /classes {
        }

        location /teachers {
        }

        location /students {
        }

        location /answersheets {
        }



    }


}
